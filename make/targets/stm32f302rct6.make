# Target definitions for the STM32F302RCT6 ARM M4F Processor.
# 
#	Written By Jonathan Thomson
#
####################################################################################################
# MIT License
# 
# Copyright 2018, Jonathan Thomson 
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
# associated documentation files (the "Software"), to deal in the Software without restriction,
# including without limitation the rights to use, copy, modify, merge, publish, distribute,
# sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all copies or
# substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
# NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT
# OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
####################################################################################################
#

#Target specific flags, including -DHW_TARGET_[XXX] flag.
STM32F302RCT6_CPU_FLAGS = $(CPU_TARGET_CORTEX_M4F_FLAGS)
STM32F302RCT6_CUSTOM_FLAGS = -I $(RTOS_INCLUDE_PATH_ARM_M4F) -I "./ThirdParty/STM-Cube-MX/jel_base/Inc"\
-I "./ThirdParty/STM-Cube-MX/jel_base/Drivers/STM32F3xx_HAL_Driver/Inc" \
-I "./ThirdParty/STM-Cube-MX/jel_base/Drivers/CMSIS/Device/ST/STM32F3xx/Include" \
-I "./ThirdParty/STM-Cube-MX/jel_base/Drivers/CMSIS/Include" \
-DHW_TARGET_STM32F302RCT6 -DUSE_HAL_DRIVER -DSTM32F302xC
STM32F302RCT6_LIBRARY_INCLUDES =

#Definition of target specific rules found in the ./make/rules.make file.
#DEBUG BUILD - STM HAL
TARGET_NAME = hal_stm32f302rct6_dbg
$(eval GLOBAL_TARGET_LIST += $(TARGET_NAME))
AFLAGS = $(STM32F302RCT6_CPU_FLAGS) $(AFLAGS_BASE_DEBUG) $(STM32F302RCT6_CUSTOM_FLAGS)
CFLAGS = $(STM32F302RCT6_CPU_FLAGS) $(CFLAGS_BASE_DEBUG) $(STM32F302RCT6_CUSTOM_FLAGS)
CXXFLAGS = $(STM32F302RCT6_CPU_FLAGS) $(CXXFLAGS_BASE_DEBUG) $(STM32F302RCT6_CUSTOM_FLAGS)

OUTPUT_DIRECTORY_BASE = build_$(TARGET_NAME)
OUTPUT_DIRECTORY_OBJECTS = $(OUTPUT_DIRECTORY_BASE)/$(OUTPUT_DIRECTORY_NAME_OBJECTS)
OUTPUT_DIRECTORY_EXEC = $(OUTPUT_DIRECTORY_BASE)/$(OUTPUT_DIRECTORY_NAME_EXECUTABLES)
OUTPUT_DIRECTORY_INFO = $(OUTPUT_DIRECTORY_BASE)/$(OUTPUT_DIRECTORY_NAME_INFO)
OUTPUT_LIBRARY_FILE = $(OUTPUT_DIRECTORY_EXEC)/$(TARGET_NAME)$(FILEEXTENSION_LIB)

ALL_OBJECT_FILES =
TARGET_ASOURCE = $(STM32F302RCT6_HAL_ASOURCE)
TARGET_CSOURCE = $(STM32F302RCT6_HAL_CSOURCE)
TARGET_CXXSOURCE = $(STM32F302RCT6_HAL_CXXSOURCE)
ALL_OBJECT_FILES += $(strip $(patsubst %.s, $(OUTPUT_DIRECTORY_OBJECTS)\\%.o, $(TARGET_ASOURCE)))
ALL_OBJECT_FILES += $(strip $(patsubst %.c, $(OUTPUT_DIRECTORY_OBJECTS)\\%.o, $(TARGET_CSOURCE)))
ALL_OBJECT_FILES += $(strip $(patsubst %.cpp, $(OUTPUT_DIRECTORY_OBJECTS)\\%.o, $(TARGET_CXXSOURCE)))

#Evaluation of template recipe rules found in the ./make/rules.make file. The STM HAL only builds to
#a single library archive for later use.
$(eval $(TEMPLRECIPE_TARGET_LIBRARY_ONLY))
$(eval $(TEMPLRECIPE_LIB_ARCHIVE_FILE))
$(eval $(TEMPLRECIPE_AFILE))
$(eval $(TEMPLRECIPE_CFILE))
$(eval $(TEMPLRECIPE_CXXFILE))
$(eval $(TEMPLRECIPE_CLEAN))
$(eval $(TEMPLRECIPE_GDB))

#Definition of target specific rules found in the ./make/rules.make file.
#DEBUG BUILD
TARGET_NAME = stm32f302rct6_dbg
$(eval GLOBAL_TARGET_LIST += $(TARGET_NAME))
AFLAGS = $(STM32F302RCT6_CPU_FLAGS) $(AFLAGS_BASE_DEBUG) $(STM32F302RCT6_CUSTOM_FLAGS)
CFLAGS = $(STM32F302RCT6_CPU_FLAGS) $(CFLAGS_BASE_DEBUG) $(STM32F302RCT6_CUSTOM_FLAGS)
CXXFLAGS = $(STM32F302RCT6_CPU_FLAGS) $(CXXFLAGS_BASE_DEBUG) $(STM32F302RCT6_CUSTOM_FLAGS)
HAL_LIB = build_hal_$(TARGET_NAME)/$(OUTPUT_DIRECTORY_NAME_EXECUTABLES)/hal_$(TARGET_NAME)$(FILEEXTENSION_LIB)
LDFLAGS = $(STM32F302RCT6_CPU_FLAGS) $(LDFLAGS_BASE_DEBUG) $(STM32F302RCT6_LIBRARY_INCLUDES) "$(HAL_LIB)"
LINKER_SCRIPT = ./ld/targets/stm32f302rct6.ld
ARCHIVER_SCRIPT = ./ar/stm32f302rct6_dbg.ar

OUTPUT_DIRECTORY_BASE = build_$(TARGET_NAME)
OUTPUT_DIRECTORY_OBJECTS = $(OUTPUT_DIRECTORY_BASE)/$(OUTPUT_DIRECTORY_NAME_OBJECTS)
OUTPUT_DIRECTORY_EXEC = $(OUTPUT_DIRECTORY_BASE)/$(OUTPUT_DIRECTORY_NAME_EXECUTABLES)
OUTPUT_DIRECTORY_INFO = $(OUTPUT_DIRECTORY_BASE)/$(OUTPUT_DIRECTORY_NAME_INFO)
OUTPUT_BINARY_FILE = $(OUTPUT_DIRECTORY_EXEC)/$(TARGET_NAME)$(FILEEXTENSION_HEX)
OUTPUT_ELF_FILE = $(OUTPUT_DIRECTORY_EXEC)/$(TARGET_NAME)$(FILEEXTENSION_ELF)
OUTPUT_LIBRARY_FILE = $(OUTPUT_DIRECTORY_EXEC)/$(TARGET_NAME)$(FILEEXTENSION_LIB)

ALL_OBJECT_FILES =
TARGET_ASOURCE = $(ASOURCE) $(STM32F302RCT6_ASOURCE)
TARGET_CSOURCE = $(CSOURCE) $(STM32F302RCT6_CSOURCE)
TARGET_CXXSOURCE = $(CXXSOURCE) $(STM32F302RCT6_CXXSOURCE)
ALL_OBJECT_FILES += $(strip $(patsubst %.s, $(OUTPUT_DIRECTORY_OBJECTS)\\%.o, $(TARGET_ASOURCE)))
ALL_OBJECT_FILES += $(strip $(patsubst %.c, $(OUTPUT_DIRECTORY_OBJECTS)\\%.o, $(TARGET_CSOURCE)))
ALL_OBJECT_FILES += $(strip $(patsubst %.cpp, $(OUTPUT_DIRECTORY_OBJECTS)\\%.o, $(TARGET_CXXSOURCE)))
CUSTOM_BINARY_DEPS = $(HAL_LIB)

#Evaluation of template recipe rules found in the ./make/rules.make file. 
$(eval $(TEMPLRECIPE_INFO))
$(eval $(TEMPLRECIPE_SEGGER_JFLASH))
$(eval $(TEMPLRECIPE_TARGET_LIBRARY))
$(eval $(TEMPLRECIPE_BINARY))
$(eval $(TEMPLRECIPE_LIB_ARCHIVE_FILE))
$(eval $(TEMPLRECIPE_AFILE))
$(eval $(TEMPLRECIPE_CFILE))
$(eval $(TEMPLRECIPE_CXXFILE))
$(eval $(TEMPLRECIPE_CLEAN))
$(eval $(TEMPLRECIPE_GDB))

#Definition of target specific rules found in the ./make/rules.make file.
#RELEASE BUILD - STM HAL
TARGET_NAME = hal_stm32f302rct6_rel
$(eval GLOBAL_TARGET_LIST += $(TARGET_NAME))
AFLAGS = $(STM32F302RCT6_CPU_FLAGS) $(AFLAGS_BASE) $(STM32F302RCT6_CUSTOM_FLAGS)
CFLAGS = $(STM32F302RCT6_CPU_FLAGS) $(CFLAGS_BASE) $(STM32F302RCT6_CUSTOM_FLAGS)
CXXFLAGS = $(STM32F302RCT6_CPU_FLAGS) $(CXXFLAGS_BASE) $(STM32F302RCT6_CUSTOM_FLAGS)

OUTPUT_DIRECTORY_BASE = build_$(TARGET_NAME)
OUTPUT_DIRECTORY_OBJECTS = $(OUTPUT_DIRECTORY_BASE)/$(OUTPUT_DIRECTORY_NAME_OBJECTS)
OUTPUT_DIRECTORY_EXEC = $(OUTPUT_DIRECTORY_BASE)/$(OUTPUT_DIRECTORY_NAME_EXECUTABLES)
OUTPUT_DIRECTORY_INFO = $(OUTPUT_DIRECTORY_BASE)/$(OUTPUT_DIRECTORY_NAME_INFO)
OUTPUT_LIBRARY_FILE = $(OUTPUT_DIRECTORY_EXEC)/$(TARGET_NAME)$(FILEEXTENSION_LIB)

ALL_OBJECT_FILES =
TARGET_ASOURCE = $(STM32F302RCT6_HAL_ASOURCE)
TARGET_CSOURCE = $(STM32F302RCT6_HAL_CSOURCE)
TARGET_CXXSOURCE = $(STM32F302RCT6_HAL_CXXSOURCE)
ALL_OBJECT_FILES += $(strip $(patsubst %.s, $(OUTPUT_DIRECTORY_OBJECTS)\\%.o, $(TARGET_ASOURCE)))
ALL_OBJECT_FILES += $(strip $(patsubst %.c, $(OUTPUT_DIRECTORY_OBJECTS)\\%.o, $(TARGET_CSOURCE)))
ALL_OBJECT_FILES += $(strip $(patsubst %.cpp, $(OUTPUT_DIRECTORY_OBJECTS)\\%.o, $(TARGET_CXXSOURCE)))

#Evaluation of template recipe rules found in the ./make/rules.make file. The STM HAL only builds to
#a single library archive for later use.
$(eval $(TEMPLRECIPE_TARGET_LIBRARY_ONLY))
$(eval $(TEMPLRECIPE_LIB_ARCHIVE_FILE))
$(eval $(TEMPLRECIPE_AFILE))
$(eval $(TEMPLRECIPE_CFILE))
$(eval $(TEMPLRECIPE_CXXFILE))
$(eval $(TEMPLRECIPE_CLEAN))
$(eval $(TEMPLRECIPE_GDB))

#RELEASE BUILD
TARGET_NAME = stm32f302rct6_rel
$(eval GLOBAL_TARGET_LIST += $(TARGET_NAME))
AFLAGS = $(STM32F302RCT6_CPU_FLAGS) $(AFLAGS_BASE) $(STM32F302RCT6_CUSTOM_FLAGS)
CFLAGS = $(STM32F302RCT6_CPU_FLAGS) $(CFLAGS_BASE) $(STM32F302RCT6_CUSTOM_FLAGS)
CXXFLAGS = $(STM32F302RCT6_CPU_FLAGS) $(CXXFLAGS_BASE) $(STM32F302RCT6_CUSTOM_FLAGS)
HAL_LIB = build_hal_$(TARGET_NAME)/$(OUTPUT_DIRECTORY_NAME_EXECUTABLES)/hal_$(TARGET_NAME)$(FILEEXTENSION_LIB)
LDFLAGS = $(STM32F302RCT6_CPU_FLAGS) $(LDFLAGS_BASE) $(STM32F302RCT6_LIBRARY_INCLUDES) "$(HAL_LIB)"
 
LINKER_SCRIPT = ./ld/targets/stm32f302rct6.ld
ARCHIVER_SCRIPT = ./ar/stm32f302rct6_rel.ar

OUTPUT_DIRECTORY_BASE = build_$(TARGET_NAME)
OUTPUT_DIRECTORY_OBJECTS = $(OUTPUT_DIRECTORY_BASE)/$(OUTPUT_DIRECTORY_NAME_OBJECTS)
OUTPUT_DIRECTORY_EXEC = $(OUTPUT_DIRECTORY_BASE)/$(OUTPUT_DIRECTORY_NAME_EXECUTABLES)
OUTPUT_DIRECTORY_INFO = $(OUTPUT_DIRECTORY_BASE)/$(OUTPUT_DIRECTORY_NAME_INFO)
OUTPUT_BINARY_FILE = $(OUTPUT_DIRECTORY_EXEC)/$(TARGET_NAME)$(FILEEXTENSION_HEX)
OUTPUT_ELF_FILE = $(OUTPUT_DIRECTORY_EXEC)/$(TARGET_NAME)$(FILEEXTENSION_ELF)
OUTPUT_LIBRARY_FILE = $(OUTPUT_DIRECTORY_EXEC)/$(TARGET_NAME)$(FILEEXTENSION_LIB)

ALL_OBJECT_FILES =
TARGET_ASOURCE = $(ASOURCE) $(STM32F302RCT6_ASOURCE)
TARGET_CSOURCE = $(CSOURCE) $(STM32F302RCT6_CSOURCE)
TARGET_CXXSOURCE = $(CXXSOURCE) $(STM32F302RCT6_CXXSOURCE)
ALL_OBJECT_FILES += $(strip $(patsubst %.s, $(OUTPUT_DIRECTORY_OBJECTS)\\%.o, $(TARGET_ASOURCE)))
ALL_OBJECT_FILES += $(strip $(patsubst %.c, $(OUTPUT_DIRECTORY_OBJECTS)\\%.o, $(TARGET_CSOURCE)))
ALL_OBJECT_FILES += $(strip $(patsubst %.cpp, $(OUTPUT_DIRECTORY_OBJECTS)\\%.o, $(TARGET_CXXSOURCE)))
CUSTOM_BINARY_DEPS = $(HAL_LIB)

#Evaluation of template recipe rules found in the ./make/rules.make file. 
$(eval $(TEMPLRECIPE_INFO))
$(eval $(TEMPLRECIPE_SEGGER_JFLASH))
$(eval $(TEMPLRECIPE_TARGET_LIBRARY))
$(eval $(TEMPLRECIPE_BINARY))
$(eval $(TEMPLRECIPE_LIB_ARCHIVE_FILE))
$(eval $(TEMPLRECIPE_AFILE))
$(eval $(TEMPLRECIPE_CFILE))
$(eval $(TEMPLRECIPE_CXXFILE))
$(eval $(TEMPLRECIPE_CLEAN))
$(eval $(TEMPLRECIPE_GDB))
